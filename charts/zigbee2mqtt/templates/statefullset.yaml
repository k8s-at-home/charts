apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zigbee2mqtt.fullname" . }}
  labels:
{{- include "zigbee2mqtt.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "zigbee2mqtt.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "zigbee2mqtt.name" . }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "zigbee2mqtt.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zigbee2mqtt.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: ZIGBEE2MQTT_DATA
          value: "/data"
        - name: TZ
          value: {{ .Values.timezone }}
        {{- if .Values.debug }}
        - name: DEBUG
          value: {{ .Values.debug }}
        {{- end }}
        {{- range $key, $value := .Values.extraEnv }}
        - name: {{ $key | quote }}
          value: {{ $value | quote }}
        {{- end }}
        {{- range $name, $opts := .Values.extraEnvSecrets }}
        - name: {{ $name }}
          valueFrom:
            secretKeyRef:
              name: {{ $opts.secret }}
              key: {{ $opts.key }}
        {{- end }}
        envFrom:
        {{- range .Values.extraSecretForEnvFrom }}
          - secretRef:
              name: {{ . }}
        {{- end }}
        {{- if and .Values.config.frontend .Values.config.experimental }}
        {{- if and .Values.config.frontend.port .Values.config.experimental.new_api }}
        ports:
        - name: http
          containerPort: {{ .Values.config.frontend.port }}
          protocol: TCP
        {{- end }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
        - name: zigbee2mqtt
          mountPath: /app/configuration.yaml
          subPath: configuration.yaml
        - name: data
          mountPath: /data
        - name: sniffer
          mountPath: {{ .Values.config.serial.port }}
        {{- if .Values.extraVolumeMounts }}{{ toYaml .Values.extraVolumeMounts | trim | nindent 8 }}{{ end }}
      volumes:
      - name: zigbee2mqtt
        configMap:
          name: {{ include "zigbee2mqtt.fullname" . }}
      - name: sniffer
        hostPath:
          path: {{ required "You must specify a path to your zigbee sniffer" .Values.config.serial.port }}
      {{- if not .Values.persistence.enabled }}
      - name: data
        emptyDir: {}
      {{- end }}
      {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
      - name: data
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}
      {{- if .Values.extraVolumes  }}{{ toYaml .Values.extraVolumes | trim | nindent 6 }}{{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: {{ include "zigbee2mqtt.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.persistence.annotations }}
      annotations:
    {{ toYaml .Values.persistence.annotations | indent 4 }}
    {{- end }}
    spec:
      accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
    {{- end }}
    {{- end }}
  {{- end }}
