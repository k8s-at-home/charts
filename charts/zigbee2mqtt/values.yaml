# Default values for zigbee2mqtt.

image:
  repository: koenkk/zigbee2mqtt
  pullPolicy: IfNotPresent
  tag: 1.16.1

strategy:
  type: Recreate

env:
  ZIGBEE2MQTT_DATA: /data

service:
  port:
    port: 8080

securityContext:
  privileged: true

persistence:
  data:
    enabled: false
    emptyDir: false
    mountPath: /data
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    # storageClass: "-"
    # accessMode: ReadWriteOnce
    # size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    # skipuninstall: false
    # existingClaim: ""

# Path to your zigbee device in the container
additionalVolumeMounts:
  - name: usb
    mountPath: /dev/ttyACM0

# Path to your zigbee device on the host
additionalVolumes:
  - name: usb
    hostPath:
      path: /dev/ttyACM0

# affinity:
#   nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#       - matchExpressions:
#         - key: app
#           operator: In
#           values:
#           - zigbee-controller

# zigbee2mqtt configuration settings
# https://www.zigbee2mqtt.io/information/configuration.html
config:
  # These will be applied ONLY on first run
  # Home Assistant integration (MQTT discovery)
  homeassistant: false

  # allow new devices to join
  permit_join: true

  # MQTT settings
  mqtt:
    # MQTT base topic for zigbee2mqtt MQTT messages
    base_topic: zigbee2mqtt
    # MQTT server URL
    server: "mqtt://localhost"
    # MQTT server authentication, uncomment if required:
    # user: my_user
    # password: my_password

  # USB / Serial settings
  serial:
    # Location of your zigbee device
    port: /dev/ttyACM0

  advanced:
    network_key: GENERATE
    log_output:
      - console

  # Both of these need to be enabled for the webui
  frontend:
    port: 8080
  experimental:
    new_api: true
