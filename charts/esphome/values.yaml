# Default values for esphome.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: esphome/esphome
  tag: 1.15.3
  pullPolicy: IfNotPresent
  pullSecrets: []

# upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

# Probes configuration
probes:
  liveness:
    enabled: true
    scheme: HTTP
    initialDelaySeconds: 60
    failureThreshold: 5
    timeoutSeconds: 10
  readiness:
    enabled: true
    scheme: HTTP
    initialDelaySeconds: 60
    failureThreshold: 5
    timeoutSeconds: 10
  startup:
    enabled: false
    scheme: HTTP
    failureThreshold: 30
    periodSeconds: 10
service:
  type: ClusterIP
  port: 6052
  portName: api
  additionalPorts: []
  # - name: homematicproxy
  #   port: 2001
  #   targetPort: 2001
  annotations: {}
  labels: {}
  clusterIP: ""
  ## List of IP addresses at which the hass-configurator service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  ##
  externalIPs: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  # nodePort: 30000
  publishNotReadyAddresses: false

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - esphome.local
  tls: []
  #  - secretName: esphome-tls
  #    hosts:
  #      - esphome.local

hostNetwork: false

persistence:
  enabled: true
  ## esphome data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  ##
  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  # existingClaim: your-claim
  ##
  ## If you want to use a volume on the host machine instead of a PVC:
  # hostPath: /path/to/the/config/folder
  accessMode: ReadWriteOnce
  size: 1Gi

## Additional hass container environment variable
## For instance to add a http_proxy
##
extraEnv: {}

## Additional hass container environment variable from k8s secrets
## For instance to add a password
## can use `!env_var` in the esphome configuration to reference these variables
extraEnvSecrets:
  # Example
  # This will set ${MQTT_PASSWORD} to the 'password' key from the 'mqtt' secret
  # MQTT_PASSWORD:
  #   secret: mqtt
  #   key: password

## If you'd like to provide your own Kubernetes Secret object instead of passing your values
## individually, pass in the name of a created + populated Secret.
## All secrets will be mounted as environment variables, with each key/value mapping to a
## corresponding environment variable.
##
extraSecretForEnvFrom: []
# - esphome-secrets

# Enable pod security context (must be `true` if runAsUser or fsGroup are set)
usePodSecurityContext: true
# Set runAsUser to 1000 to let esphome run as non-root user.
# When setting runAsUser to a different value than 0 also set fsGroup to the same value:
# runAsUser: <defaults to 0>
# fsGroup: <will be omitted in deployment if runAsUser is 0>

# Mount devices or folders from the host machine. Can be used for USB device mounting.
hostMounts: []
  # Example
  # - name: zha
  #   hostPath: /dev/serial/by-id/usb-Silicon_Labs_HubZ_Smart_Home_Controller_6120245D-if01-port0

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}

# Any extra volumes to define for the pod
extraVolumes: []
  # - name: example-name
  #   hostPath:
  #     path: /path/on/host
  #     type: DirectoryOrCreate

# Any extra volume mounts to define for the containers
extraVolumeMounts: []
#   - name: example-name
#     mountPath: /path/in/container


git:
  enabled: false

  image:
    repository: k8sathome/git-crypt
    tag: 2020.09.28
    pullPolicy: IfNotPresent

  ## Specify the command that runs in the git-sync container to pull in configuration.
  # command: []

  # Committer settings
  user:
    name: ""
    email: ""

  repo: ""
  secret: git-creds
  syncPath: /config
  keyPath: /root/.ssh
