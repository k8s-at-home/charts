#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default
# values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#
---
image:
  # -- image repository
  repository: matrixdotorg/dendrite-monolith
  # -- image tag
  tag: "v0.5.1"
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- If added dendrite will start a HTTP and HTTPS listener
# args:
#   - "--tls-cert=server.crt"
#   - "--tls-key=server.key"

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    ports:
      # -- Configures the default HTTP listener for dendrite
      # @default -- See values.yaml
      http:
        port: 8008
      # -- Configures the HTTPS listener for dendrite
      # @default -- See values.yaml
      https:
        enabled: true
        port: 8448
        protocol: HTTPS

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  media:
    enabled: false
    mountPath: &mediaPath /var/dendrite/media
  # -- Configure Jetsream persistence. This is highly recommended in production.
  # @default -- See values.yaml
  jetstream:
    enabled: false
    mountPath: /var/dendrite/jetstream

# -- Configuration for Dendrite.
# For more information see [the sample
# denrite-config.yaml](https://github.com/matrix-org/dendrite/blob/master/build/docker/config/dendrite-config.yaml)
# @default -- See values.yaml
dendrite:
  # -- If enabled, use an existing secrets for the TLS certificate and key.
  # Otherwise, to enable TLS a `server.crt` and `server.key` must be mounted at
  # `/etc/dendrite`.
  # @default -- See values.yaml
  tls_secret:
    enabled: false
    secretName: "dendrite-tls"
    crtKey: tls.crt
    keyKey: tls.key
  # -- If enabled, use an existing secret for matrix_key.pem. Otherwise a
  # matrix_key.pem must be mounted to `/etc/dendrite`.
  # @default -- See values.yaml
  matrix_key_secret:
    enabled: false
    key: matrix_key.pem
  # -- Configure database connection parameters.
  # @default -- See values.yaml
  database:
    max_open_conns: 100
    max_idle_conns: 2
    conn_max_lifetime: -1
  # -- Configure the global settings for dendrite.
  # @default -- See values.yaml
  global:
    # -- (required) Configure the server name for the dendrite instance.
    server_name: localhost
    # -- Configure the key_validity period
    key_validity_period: 168h0m0s
    # -- Configure the well-known server name and optional port
    well_known_server_name: ""
    # -- Configure the list of domains the server will trust as identity servers
    trusted_third_party_id_servers:
      - matrix.org
      - vector.im
    # -- Configure prometheus metrics collection for dendrite.
    # @default -- See values.yaml
    metrics:
      # -- If enabled, metrics collection will be enabled
      # @default -- See values.yaml
      enabled: false
      basic_auth:
        username: metrics
        password: metrics
    # -- Configure DNS cache.
    # @default -- See values.yaml
    dns_cache:
      # -- If enabled, dns cache will be enabled.
      # @default -- See values.yaml
      enabled: false
      cache_size: 256
      cache_lifetime: "5m"
  # -- Configure the dendrite components.
  # @default -- See values.yaml
  components:
    # -- Configure the App Service API
    # @default -- See values.yaml
    app_service_api:
      config_files: []
    # -- Configure the Client API
    client_api:
      # -- Enable or disable registration for this homeserver.
      registration_disabled: false
      # -- Shared secret that allows registration, despite registration_disabled.
      registration_shared_secret: ""
      # -- Configure captcha for registration
      # @default -- See values.yaml
      captcha:
        enabled: false
        recaptcha_public_key: ""
        recaptcha_private_key: ""
        recaptcha_bypass_secret: ""
        recaptcha_siteverify_api: ""
      # -- Configure TURN
      # @default -- See values.yaml
      turn:
        turn_user_lifetime: ""
        turn_uris: []
        turn_shared_secret: ""
        turn_username: ""
        turn_password: ""
      # -- Configure rate limiting.
      # @default -- values.yaml
      rate_limiting:
        enabled: true
        threshold: 5
        cooloff_ms: 500
    # -- Configure the Federation API
    # @default -- values.yaml
    federation_api:
      federation_certificates: []
      send_max_retires: 16
      disable_tls_validation: false
      proxy_outbound:
        enabled: false
        protocol: http
        host: localhost
        port: 8080
      key_perspectives:
        - server_name: matrix.org
          keys:
            - key_id: ed25519:auto
              public_key: Noi6WqcDj0QmPxCNQqgezwTlBKrfqehY1u2FyWP9uYw
            - key_id: ed25519:a_RXGa
              public_key: l8Hft5qXKn1vfHrg3p4+W8gELQVo8N13JkluMfmn2sQ
      prefer_direct_fetch: false
    # -- Configure the Media API
    # @default -- values.yaml
    media_api:
      base_path: *mediaPath
      max_file_size_bytes: 10485760
      dynamic_thumbnails: false
      max_thumbnail_generators: 10
      thumbnail_sizes:
        - width: 32
          height: 32
          method: crop
        - width: 96
          height: 96
          method: crop
        - width: 640
          height: 480
          method: scale
  # -- Configure opentracing.
  # @default -- See values.yaml
  tracing:
    enabled: false
    jaeger:
      serviceName: ""
      disabled: false
      rpc_metrics: false
      tags: []
      sampler: null
      reporter: null
      headers: null
      baggage_restrictions: null
      throttler: null
  # -- Configure logging.
  # @default -- See values.yaml
  logging:
    - type: file
      level: info
      params:
        path: /var/log/dendrite

postgresql:
  # -- Enable and configure postgres as the database for dendrite.
  # @default -- See value.yaml
  enabled: false
  image:
    repository: bitnami/postgresql
    tag: "14.1.0"
  postgresqlUsername: dendrite
  postgresqlPassword: changeme
  postgresqlDatabase: dendrite
  persistence:
    enabled: false
  initdbScriptsConfigMap: "dendrite-postgresql-init-scripts"

nats:
  # -- Enable and configure NATS for dendrite. Can be disabled for monolith
  # deployments - an internal NATS server will be used in its place.
  # @default -- See value.yaml
  enabled: false
  image: nats:2.7.1-alpine
  jetstream:
    enabled: true
