# Default values for deconz.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 1

image:
  repository: marthoc/deconz
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "amd64-2.05.80"

imagePullSecrets: []

# upgrade strategy type (e.g. Recreate or RollingUpdate)
strategyType: Recreate

nameOverride: ""
fullnameOverride: ""

timezone: "UTC"

# Specify the Zigbee device that should be passed through to the deCONZ container
zigbeeDevice:
  enabled: false
  hostPath: /dev/ttyUSB1

vnc:
  enabled: true

  ## deCONZ VNC password
  password: changeme
  ## Specify VNC password using existing secret containing a key named 'vnc-password'
  existingSecret: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  privileged: true
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

persistence:
  enabled: false
  annotations: {}
  ## deconz data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"

  ## If you want to reuse an existing claim, you can pass the name of the PVC using
  ## the existingClaim variable
  ##
  # existingClaim: deconz-data
  accessMode: ReadWriteOnce
  size: 1Gi
  ## When mounting the data volume you may specify a subPath
  # subPath: /configs/deconz

# Any extra volumes to define for the pod
# Volumes will be mounted to the folder specified under mountPath
# If no mountPath is set it will be mounted to /mnt/<name>
extraVolumes: []
#  - name: example-name
#    hostPath:
#      path: /path/on/host
#    type: DirectoryOrCreate
#    mountPath: "/mnt/test"

service:
  type: ClusterIP
  clusterIP: ""

  httpPort: 80
  websocketPort: 443
  vncPort: 5900

  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  # nodePort:
  ## List of IP addresses at which the hass-configurator service is available
  ## Ref: https://kubernetes.io/docs/user-guide/services/#external-ips
  externalIPs: []
  ## Use loadBalancerIP to request a specific static IP, otherwise leave blank
  loadBalancerIP: ""
  # loadBalancerSourceRanges: []
  ## Set the externalTrafficPolicy in the Service to either Cluster or Local
  externalTrafficPolicy: Local

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - host: deconz.local
  tls: []
  #  - secretName: deconz-tls
  #    hosts:
  #      - deconz.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

probes:
  liveness:
    enabled: true
    initialDelaySeconds: 30
    failureThreshold: 5
    timeoutSeconds: 10
  readiness:
    enabled: true
    initialDelaySeconds: 30
    failureThreshold: 5
    timeoutSeconds: 10
  startup:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10

nodeSelector: {}

tolerations: []

affinity: {}
