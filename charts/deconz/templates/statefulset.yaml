apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "deconz.fullname" . }}
  labels:
  {{- include "deconz.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "deconz.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "deconz.name" . }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "deconz.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "deconz.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ int .Values.service.httpPort }}
              protocol: TCP
            - name: websocket
              containerPort: {{ int .Values.service.websocketPort }}
              protocol: TCP
            {{- if .Values.vnc.enabled }}
            - name: vnc
              containerPort: {{ int .Values.service.vncPort }}
              protocol: TCP
            {{- end }}
          env:
            {{- if .Values.timezone }}
            - name: TZ
              value: "{{ .Values.timezone }}"
            {{- end }}
            - name: DECONZ_WEB_PORT
              value: "{{ .Values.service.httpPort }}"
            - name: DECONZ_WS_PORT
              value: "{{ .Values.service.websocketPort }}"
            {{- if .Values.zigbeeDevice.enabled }}
            - name: DECONZ_DEVICE
              value: "{{ .Values.zigbeeDevice.hostPath }}"
            {{- end }}
            {{- if .Values.vnc.enabled }}
            - name: DECONZ_VNC_MODE
              value: "1"
            - name: DECONZ_VNC_PORT
              value: "{{ .Values.service.vncPort }}"
            - name: DECONZ_VNC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "deconz.secretName" . }}
                  key: vnc-password
            {{- end }}
          volumeMounts:
            {{- if .Values.zigbeeDevice.enabled }}
            - name: zigbee-device
              mountPath: {{ .Values.zigbeeDevice.hostPath }}
            {{- end }}
            - name: config
              mountPath: /root/.local/share/dresden-elektronik/deCONZ
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- include "deconz.extraVolumeMounts" . | nindent 12 }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          {{- end }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            tcpSocket:
              port: http
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      volumes:
        {{- if .Values.zigbeeDevice.enabled }}
        - name: zigbee-device
          hostPath:
            path: {{ .Values.zigbeeDevice.hostPath }}
        {{- end }}
        {{- if not .Values.persistence.enabled }}
        - name: config
          emptyDir: {}
        {{- end }}
        {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: config
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- end }}
        {{- include "deconz.extraVolumes" . | nindent 8 }}

  volumeClaimTemplates:
    {{- if and .Values.persistence.enabled ( not .Values.persistence.existingClaim ) }}
    - metadata:
        name: config
        labels:
        {{- include "deconz.labels" . | nindent 10 }}
        {{- if .Values.persistence.annotations  }}
        annotations:
        {{- toYaml .Values.persistence.annotations | nindent 10 }}
      {{- end }}
      spec:
        accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass | quote }}
        {{- end }}
  {{- end }}
  {{- end }}