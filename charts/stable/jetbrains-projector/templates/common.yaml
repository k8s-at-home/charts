{{/* Make sure all variables are set properly */}}
{{- include "common.values.setup" . }}

{{/* Use .Values.image.registry if it exists because of jetbrains extremely long registry */}}
{{- if .Values.image.registry -}}
  {{- $_ := set .Values.image "repository" (printf "%s/%s" .Values.image.registry .Values.image.repository) -}}
{{- end -}}

{{/* Append the hardcoded volumes */}}
{{- define "jetbrains-projector.hardcodedValues" -}}
persistence:
  idea-properties:
    enabled: "true"
    mountPath: /tmp/idea.properties
    subPath: idea.properties
    type: "custom"
    volumeSpec:
      configMap:
        name: {{ printf "%v-config" (include "common.names.fullname" .) }}

  {{- if .Values.sslGen.enabled }}
  certs:
    enabled: "true"
    mountPath: /tmp/certs
    type: "custom"
    volumeSpec:
      secret:
        secretName: {{ required "a secret name is required when sslGen is enabled" .Values.sslGen.certs.secret }}

  ssl-properties:
    enabled: "true"
    mountPath: /tmp/{{ .Values.sslGen.properties.key }}
    subPath: {{ .Values.sslGen.properties.key }}
    type: "custom"
    volumeSpec:
      secret:
        secretName: {{ default (printf "%s-secrets" (include "common.names.fullname" .)) .Values.sslGen.properties.existingSecret }}
  {{- end }}
{{- end -}}
{{- $_ := mergeOverwrite .Values (include "jetbrains-projector.hardcodedValues" . | fromYaml) -}}

{{/* Add the *_PROPERTIES environment variable */}}
{{- $ide := include "jetbrains-projector.ide" . }}
{{- $_ := set .Values.env (printf "%s_PROPERTIES" (upper $ide)) "/tmp/idea.properties" -}}

{{- if .Values.sslGen.enabled -}}
  {{/* Add the ssl.properties env var */}}
  {{- $_ := set .Values.env "ORG_JETBRAINS_PROJECTOR_SERVER_SSL_PROPERTIES_PATH" (printf "/tmp/%s" .Values.sslGen.properties.key) -}}
  {{/* Add the cert file env vars */}}
  {{- $_ := set .Values.env "TLS_CRT" .Values.sslGen.certs.crt -}}
  {{- $_ := set .Values.env "TLS_KEY" .Values.sslGen.certs.key -}}
{{- end -}}

{{- if not .Values.image.repository -}}
  {{- fail "an image is required in .Values.image.repository" -}}
{{- end -}}

{{/* Render the templates */}}
{{ include "common.all" . }}
