#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

image:
  repository: linuxserver/sonarr
  pullPolicy: IfNotPresent
  tag: version-3.0.4.993

strategy:
  type: Recreate

env: {}
  # TZ: UTC
  # PUID: 1001
  # PGID: 1001

service:
  port:
    port: 8989

ingress:
  enabled: false

probes:
  liveness:
    enabled: true
    ## Set this to true if you wish to specify your own livenessProbe
    custom: true
    ## The spec field contains the values for the default livenessProbe.
    ## If you selected custom: true, this field holds the definition of the livenessProbe.
    spec:
      exec:
        command:
        - /usr/bin/env
        - bash
        - -c
        - curl --fail localhost:8989/api/v3/system/status?apiKey=`IFS=\> && while
          read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
      failureThreshold: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10

persistence:
  config:
    enabled: false
    emptyDir:
      enabled: false

  media:
    enabled: false
    emptyDir:
      enabled: false
    mountPath: /media
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    # storageClass: "-"
    # accessMode: ReadWriteOnce
    # size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    # skipuninstall: false
    # existingClaim: ""

# Enable gathering Prometheus metrics
prometheus:
  podMonitor:
    enabled: false
    interval: 1m
    scrapeTimeout: 1m30s
    additionalLabels: {}

# # When using the prometheus.podMonitor the following
# # container is required
# additionalContainers:
# - name: exportarr
#   image: ghcr.io/onedr0p/exportarr:v0.6.0
#   imagePullPolicy: IfNotPresent
#   args: ["exportarr", "sonarr"]
#   env:
#   - name: PORT
#     value: "32123"
#   - name: URL
#     value: "http://localhost"
#   - name: CONFIG
#     value: "/config/config.xml"
#   ports:
#   - name: exportarr
#     containerPort: 32123
#   volumeMounts:
#   - name: config
#     mountPath: /config
#     readOnly: true
