# Default values for tdarr.

image:
  # -- tdarr image
  repository: haveagitgat/tdarr
  # -- tdarr image tag
  tag: 2.00.07
  # tdarr image pull policy
  pullPolicy: IfNotPresent

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

service:
  port:
    # -- Kubernetes port where the GUI is exposed
    port: 8265

env:
  # -- Timezone
  TZ: America/New York
  # -- tdarr web UI listening port (same as Service port)
  webUIPort: 8265
  # -- tdarr server binding address
  serverIP: 0.0.0.0
  # -- tdarr server listening port
  serverPort: 8266

# -- Node labels for pod assignment of the GUI
nodeSelector: {}

# -- Toleration labels for pod assignment of the GUI
tolerations: []

# -- Affinity settings for pod assignment of the GUI
affinity: {}

# -- Pod annotations
podAnnotations: {}

additionalContainers:
- name: node
  # -- Node image and tag
  image: haveagitgat/tdarr_node:2.00.07
  env:
    - name: TZ
      # -- Node Timezone
      value: "America/New York"
    - name: nodeID
      # -- Node name
      value: node
    - name: serverIP
      # -- tdarr server IP/hostname
      value: "localhost"
    - name: serverPort
      # -- tdar server port
      value: "8266"
#  volumeMounts:
#  - name: config
#    mountPath: /app/configs
#  - name: media
#    mountPath: /media

persistence:
# -- Volume used for configuration
  config:
    enabled: false
    emptyDir:
      enabled: false
    mountpath: /app/configs
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    # storageClass: "-"
    # accessMode: ReadWriteOnce
    # size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    # skipuninstall: false
    # existingClaim: ""

  data:
# -- Volume used for tdarr server database
    enabled: false
    emptyDir:
      enabled: false
    mountpath: /app/server
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    # storageClass: "-"
    # accessMode: ReadWriteOnce
    # size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    # skipuninstall: false
    # existingClaim: ""

  media:
# -- Volume used for media libraries
    enabled: false
    emptyDir:
      enabled: false
    mountpath: /media
    ## Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    # storageClass: "-"
    # accessMode: ReadWriteOnce
    # size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    # skipuninstall: false
    # existingClaim: ""
