#
# IMPORTANT NOTE
#
# This chart inherits from our common library chart. You can check the default values/options here:
# https://github.com/k8s-at-home/library-charts/tree/main/charts/stable/common/values.yaml
#

image:
  # -- image repository
  repository: ghcr.io/k8s-at-home/radarr
  # -- image tag
  tag: v3.2.2.5080
  # -- image pull policy
  pullPolicy: IfNotPresent

# -- environment variables.
# @default -- See below
env:
  # -- Set the container timezone
  TZ: UTC

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  main:
    ports:
      http:
        port: 7878

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: false

# -- Configures the probes for the main Pod.
# @default -- See values.yaml
probes:
  liveness:
    enabled: true
    ## Set this to true if you wish to specify your own livenessProbe
    custom: true
    ## The spec field contains the values for the default livenessProbe.
    ## If you selected custom: true, this field holds the definition of the livenessProbe.
    spec:
      exec:
        command:
        - /usr/bin/env
        - bash
        - -c
        - curl --fail localhost:7878/api/v3/system/status?apiKey=`IFS=\> && while
          read -d \< E C; do if [[ $E = "ApiKey" ]]; then echo $C; fi; done < /config/config.xml`
      failureThreshold: 5
      initialDelaySeconds: 60
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 10

# -- Configure persistence settings for the chart under this key.
# @default -- See values.yaml
persistence:
  config:
    enabled: false

  media:
    enabled: false
    mountPath: /media

prometheus:
  # -- Enable and configure a Prometheus podMonitor for the chart under this key.
  # See also the notes under `additionalContainers`.
  # @default -- See values.yaml
  podMonitor:
    enabled: false
    interval: 3m
    scrapeTimeout: 1m
    additionalLabels: {}

# # When using the prometheus.podMonitor the following
# # container is required
# additionalContainers:
# - name: exportarr
#   image: ghcr.io/onedr0p/exportarr:v0.6.0
#   imagePullPolicy: IfNotPresent
#   args: ["exportarr", "radarr"]
#   env:
#   - name: PORT
#     value: "32123"
#   - name: URL
#     value: "http://localhost"
#   - name: CONFIG
#     value: "/config/config.xml"
#   ports:
#   - name: exportarr
#     containerPort: 32123
#   volumeMounts:
#   - name: config
#     mountPath: /config
#     readOnly: true
