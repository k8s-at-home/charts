replicaCount: 1

image:
  repository: teslamate/teslamate
  tag: 1.20.0
  pullPolicy: IfNotPresent

nameOverride: ""
fullnameOverride: ""

timeZone: UTC

mqtt:
  enabled: false

  # mqtt broker hostname - REQUIRED if mqtt is enabled
  host:

  username:
  password:

  # Enables TLS if true
  tls:
  # Accepts invalid certificates if true
  tlsAcceptInvalid:

# Configures whether to check the origin header or not.
checkOrigin: false

# Host part used for generating URLs throughout the app
virtualHost:

# valid values are 'en' or 'de'
locale: en

# Probes configuration
probes:
  liveness:
    failureThreshold: 15
    periodSeconds: 10
  readiness:
    failureThreshold: 15
    periodSeconds: 10
  startup:
    initialDelaySeconds: 15
    failureThreshold: 30
    periodSeconds: 10

service:
  type: ClusterIP
  port: 4000

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - chart-example.local
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Configuration values for the postgresql dependency.
## Ref: https://github.com/helm/charts/blob/master/stable/postgresql/README.md
postgresql:
  image:
    repository: postgres
    tag: 12.1
  postgresqlDataDir: "/data/pgdata"

  ### PostgreSQL User to create.
  ##
  postgresqlUsername: teslamate

  ## PostgreSQL Password for the new user.
  ## If not set, a random 10 characters password will be used.
  ##
  postgresqlPassword: teslamate

  ## PostgreSQL Database to create.
  ##
  postgresqlDatabase: teslamate

  ## Persistent Volume Storage configuration for PostgreSQL.
  ##
  ## Ref: https://kubernetes.io/docs/user-guide/persistent-volumes
  ##
  persistence:
    ## Enable PostgreSQL persistence using Persistent Volume Claims.
    ##
    enabled: true

    ## Persistent Volume Storage Class to be used by PersistentVolumes created
    ## for PostgreSQL.
    ##
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass:

    ## Persistent Volume Access Mode.
    ##
    accessModes:
      - ReadWriteOnce

    ## Persistent Volume Storage Size.
    ##
    size: 8Gi

    mountPath: "/data/"
