# Default values for media-common-openvpn.

image:
  repository: dperson/openvpn-client
  tag: latest
  pullPolicy: IfNotPresent

# All variables specified here will be added to the openvpn sidecar container
# Ref https://hub.docker.com/r/dperson/openvpn-client for all config values
env: []
# TZ: UTC

# Provide a customized vpn.conf file to be used by openvpn.
vpnConf:  # |-
  # Some Example Config
  # remote greatvpnhost.com 8888
  # auth-user-pass
  # Cipher AES

# Provide custom up/down scripts that can be used by the vpnConf
scripts:
  up:  # |-
    # #!/bin/bash
    # echo "connected" > /shared/vpnstatus
  down:  # |-
    # #!/bin/bash
    # echo "disconnected" > /shared/vpnstatus

# Credentials to connect to the VPN Service (used with -a)
auth:  # "user;password"
# OR specify an existing secret that contains the credentials. Credentials should be stored
# under the VPN_AUTH key
authSecret:  # my-vpn-secret

additionalVolumeMounts: []

# Optionally specify a livenessProbe, e.g. to check if the connection is still
# being protected by the VPN
livenessProbe: {}
# exec:
#    command:
#      - sh
#      - -c
#      - if [ $(curl -s https://ipinfo.io/country) == 'US' ]; then exit 0; else exit $?; fi
#  initialDelaySeconds: 30
#  periodSeconds: 60
#  failureThreshold: 1

# If set to true, will deploy a network policy that blocks all outbound
# traffic except traffic specified as allowed
networkPolicy:
  enabled: false

  # The egress configuration for your network policy, All outbound traffic
  # From the pod will be blocked unless specified here. Your cluster must
  # have a CNI that supports network policies (Canal, Calico, etc...)
  # https://kubernetes.io/docs/concepts/services-networking/network-policies/
  # https://github.com/ahmetb/kubernetes-network-policy-recipes
  egress:
    # - to:
    #   - ipBlock:
    #       cidr: 0.0.0.0/0
    #   ports:
    #   - port: 53
    #     protocol: UDP
    #   - port: 53
    #     protocol: TCP
