apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "alertmanager-bot.fullname" . }}
  labels:
    {{- include "alertmanager-bot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "alertmanager-bot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "alertmanager-bot.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "alertmanager-bot.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ALERTMANAGER_URL
              value: "{{ .Values.config.alertmanagerUrl }}"
            - name: BOLT_PATH
              value: "{{ .Values.config.boltPath }}"
            - name: STORE
              value: "{{ .Values.config.storeEngine }}"
            - name: TELEGRAM_ADMIN
              valueFrom:
                secretKeyRef:
                  name: {{ template "alertmanager-bot.fullname" . }}
                  key: telegram-admin
            - name: TELEGRAM_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ template "alertmanager-bot.fullname" . }}
                  key: telegram-token
            - name: TEMPLATE_PATHS
              value: "{{ .Values.config.templatePath }}"
            - name: LISTEN_ADDR
              value: "0.0.0.0:8080"
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          volumeMounts:
          - mountPath: /data
            name: datastore
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: datastore
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "alertmanager-bot.fullname" . }}{{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}