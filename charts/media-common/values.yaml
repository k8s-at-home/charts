# Default values for media-common.

image:
  organization: ""
  repository: ""
  pullPolicy: IfNotPresent
  tag: ""

# Probes configuration
probes:
  liveness:
    initialDelaySeconds: 60
    failureThreshold: 5
    timeoutSeconds: 10
  readiness:
    initialDelaySeconds: 60
    failureThreshold: 5
    timeoutSeconds: 10

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

configPath: /config

env:
  TZ: UTC

service:
  type: ClusterIP
  port: ""
  ## Specify the nodePort value for the LoadBalancer and NodePort service types.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  # nodePort:
  ## Provide any additional annotations which may be required. This can be used to
  ## set the LoadBalancer service type to internal only.
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
  ##
  annotations: {}
  labels: {}
  additionalSpec: {}

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          # Ignored if not kubeVersion >= 1.14-0
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  extraIngresses:
  # - enabled: false
  #   nameSuffix: "api"
  #   annotations: {}
  #   # kubernetes.io/ingress.class: nginx
  #   # kubernetes.io/tls-acme: "true"
  #   labels: {}
  #   hosts:
  #     - host: chart-example.local
  #       paths:
  #         - path: /api
  #          # Ignored if not kubeVersion >= 1.14-0
  #          pathType: Prefix
  #   tls: []
  #   #  - secretName: chart-example-tls
  #   #    hosts:
  #   #      - chart-example.local

persistence:
  # type: options are statefulset or deployment
  type: statefulset
  config:
    enabled: true
    ## media-common configuration data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    # existingClaim: your-claim
    # subPath: some-subpath
    accessMode: ReadWriteOnce
    size: 1Gi
    ## Do not delete the pvc upon helm uninstall
    skipuninstall: false
  media:
    enabled: false
    ## media-common media volume configuration
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    ##
    ## If you want to reuse an existing claim, you can pass the name of the PVC using
    ## the existingClaim variable
    # existingClaim: your-claim
    # subPath: some-subpath
    accessMode: ReadWriteOnce
    size: 10Gi
    ## Do not delete the pvc upon helm uninstall
    skipuninstall: false

initContainers: []

additionalContainers: []

additionalVolumes: []

additionalVolumeMounts: []

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

# Enable and configure the OpenVPN add-on here
openvpn:
  enabled: false

  image:
    repository: dperson/openvpn-client
    tag: latest
    pullPolicy: IfNotPresent

  # All variables specified here will be added to the openvpn sidecar container
  # Ref https://hub.docker.com/r/dperson/openvpn-client for all config values
  env: {}
  # TZ: UTC

  # Provide a customized vpn.conf file to be used by openvpn.
  vpnConf:  # |-
    # Some Example Config
    # remote greatvpnhost.com 8888
    # auth-user-pass
    # Cipher AES

  # Provide custom up/down scripts that can be used by the vpnConf
  scripts:
    up:  # |-
      # #!/bin/bash
      # echo "connected" > /shared/vpnstatus
    down:  # |-
      # #!/bin/bash
      # echo "disconnected" > /shared/vpnstatus

  # Credentials to connect to the VPN Service (used with -a)
  auth:  # "user;password"
  # OR specify an existing secret that contains the credentials. Credentials should be stored
  # under the VPN_AUTH key
  authSecret:  # my-vpn-secret

  additionalVolumeMounts: []

  # Optionally specify a livenessProbe, e.g. to check if the connection is still
  # being protected by the VPN
  livenessProbe: {}
  # exec:
  #    command:
  #      - sh
  #      - -c
  #      - if [ $(curl -s https://ipinfo.io/country) == 'US' ]; then exit 0; else exit $?; fi
  #  initialDelaySeconds: 30
  #  periodSeconds: 60
  #  failureThreshold: 1

  # If set to true, will deploy a network policy that blocks all outbound
  # traffic except traffic specified as allowed
  networkPolicy:
    enabled: false

    # The egress configuration for your network policy, All outbound traffic
    # From the pod will be blocked unless specified here. Your cluster must
    # have a CNI that supports network policies (Canal, Calico, etc...)
    # https://kubernetes.io/docs/concepts/services-networking/network-policies/
    # https://github.com/ahmetb/kubernetes-network-policy-recipes
    egress:
      # - to:
      #   - ipBlock:
      #       cidr: 0.0.0.0/0
      #   ports:
      #   - port: 53
      #     protocol: UDP
      #   - port: 53
      #     protocol: TCP

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podAnnotations: {}
